Lab: Java Methods Chapter 9, Exercise 17 - Complex

 

17.    (a) Implement a class Complex (which represents a complex number a + b•i) with two fields of the type double and two constructors , Complex(double a) and Complex(double a, double b). Complex(a) should make the same complex number as Complex(a, 0.0).

 

(b) Add a method abs to your class that returns  for a complex number constructed as Complex(a, b).

 

(c) Recall that if a + b•i and c + d•i are two complex numbers, their sum is defined as (a + c) + (b + d)•i. Write the Complex class’s add method, which builds and returns the sum of this number and other:

 

public Complex add(Complex other)

{

  < ... missing statements >

}

 

(d) Add a toString method to your Complex class that returns a string representation of the number in the form a + bi.

 

(e) Find the rule for multiplying two complex numbers. (Hint: you can derive this rule yourself if you know that i•i = -1.) Implement and test a method multiply for multiplying this complex number by another complex number.  As with the add method, the multiply method should not change this object; it should build and return a new complex number, the product.

 

(f)  Add overloaded versions of add and multiply that would allow you to pass a parameter as a double rather than a Complex to the add and multiply methods.

 

(g) Create a JUnit test class to test all of the methods in your Complex class.

 